import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Point;
import java.awt.RenderingHints;
import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;
import java.awt.event.KeyAdapter;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseMotionAdapter;

import javax.swing.JComponent;

private static class CustomGlassPane extends JComponent{
        private Point p1;
        private Point p2;
        private boolean lineDrawn;

        public CustomGlassPane(){
            addMouseListener(new MouseAdapter(){
                @Override
                public void mouseClicked(MouseEvent e){
                    if(p1 == null || lineDrawn){
                        if(lineDrawn){
                            p1 = null;
                            p2 = null;
                            lineDrawn = false;
                        }
                        p1 = e.getPoint();
                    }else{
                        p2 = e.getPoint();
                        repaint(); // not optimal
                        lineDrawn = true;
                    }
                }
            });

            // Block all other input events
            addMouseMotionListener(new MouseMotionAdapter(){});
            addKeyListener(new KeyAdapter(){});
            addComponentListener(new ComponentAdapter(){
                @Override
                public void componentShown(ComponentEvent e){
                    requestFocusInWindow();
                }
            });
            setFocusTraversalKeysEnabled(false);
        }

        @Override
        protected void paintComponent(Graphics g){
            if(p1 != null && p2 != null){
                Graphics2D g2 = (Graphics2D) g.create();

                g2.setRenderingHint(
                        RenderingHints.KEY_ANTIALIASING, 
                        RenderingHints.VALUE_ANTIALIAS_ON);
                g2.setColor(Color.RED);
                g2.drawLine((int)p1.getX(), (int)p1.getY(), (int)p2.getX(), (int)p2.getY());

                g2.dispose();
            }
        }
    }